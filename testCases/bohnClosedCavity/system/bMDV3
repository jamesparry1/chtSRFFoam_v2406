/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

rmax 0.24;
rmin 0.125;
xmax 0.06;
xmin -0.06;
xgmin -0.03;
xgmax 0.03;
rgmax 0.21;
rgmin 0.155;
zmin 0;
zmax 0.12;


vertices
(
    ($xmin $rmin $zmin)
    ($xmax $rmin $zmin)
    ($xmax $rmax $zmin)
    ($xmin $rmax $zmin)
    ($xgmin $rgmin $zmin)
    ($xgmax $rgmin $zmin)
    ($xgmax $rgmax $zmin)
    ($xgmin $rgmax $zmin)
    ($xmin $rmin $zmax)
    ($xmax $rmin $zmax)
    ($xmax $rmax $zmax)
    ($xmin $rmax $zmax)
    ($xgmin $rgmin $zmax)
    ($xgmax $rgmin $zmax)
    ($xgmax $rgmax $zmax)
    ($xgmin $rgmax $zmax)
);

blocks
(
    // left 1
    hex (0 1 5 4 8 9 13 12) (10 10 10) simpleGrading (1 1 1)
    // top 1
    hex (1 2 6 5 9 10 14 13) (10 10 10) simpleGrading (1 1 1)
    // right 1
    hex (2 3 7 6 10 11 15 14) (10 10 10) simpleGrading (1 1 1)
    // bottom 1
    hex (3 0 4 7 11 8 12 15) (10 10 10) simpleGrading (1 1 1)
    // center 1
    hex (4 5 6 7 12 13 14 15) (10 10 10) simpleGrading (1 1 1)


//    // left 1
//    hex (0 3 7 4 11 8 12 15) (10 10 10) simpleGrading (1 1 1)
//    // top 1
//    hex (0 4 5 1 11 15 14 10) (10 10 10) simpleGrading (1 1 1)
//    // right 1
//    hex (1 2 6 5 10 14 13 9) (10 10 10) simpleGrading (1 1 1)
//    // bottom 1
//    hex (3 7 6 2 8 9 13 12) (10 10 10) simpleGrading (1 1 1)

//    // left 2
//    hex (11 8 12 15 0 4 7 3) (10 10 10) simpleGrading (1 1 1)
//    // top 2
//    hex (11 15 14 10 0 1 5 4) (10 10 10) simpleGrading (1 1 1)
//    // right 2
//    hex (10 14 13 9 1 2 6 5) (10 10 10) simpleGrading (1 1 1)
//    // bottom 2
//    hex (8 9 13 12 3 7 6 2) (10 10 10) simpleGrading (1 1 1)
);

edges
(
//    arc 0 11 (-0.06 0 -0.24)
//    arc 3 8 (-0.06 0 -0.125)
//    arc 1 10 (0.06 0 -0.24)
//    arc 2 9 (0.06 0 -0.125)
//    arc 11 0 (-0.06 0 0.24)
//    arc 8 3 (-0.06 0 0.125)
//    arc 10 1 (0.06 0 0.24)
//    arc 9 2 (0.06 0 0.125)

//    line 0 1 (0 0.24 0)
//    line 1 2 (-0.06 0.1825 0)
//    line 2 3 (0 0.125 0)
//    line 3 0 (0.06 0.1825 0)
//    line 8 9 (0 -0.24 0)
//    line 9 10 (-0.06 -0.1825 0)
//    line 10 11 (0 -0.125 0)
//    line 11 8 (0.06 -0.1825 0)
);

patches
(
	wall face1
      (
		(0 1 5 4)
	 	(1 2 6 5)
		(2 3 7 6)
		(3 0 4 7)
		(4 5 6 7)
      )
	
	wall face2
      (
		(8 9 13 12)
	 	(9 10 14 13)
		(10 11 15 14)
		(11 8 12 15)
		(12 13 14 15)
      )

	wall side1
      (
       		(0 3 11 8)
      )

	wall side2 
	(
	 	(1 9 10 2)
	)

	wall side3 
	(
	 	(3 2 10 11)
	)

	wall side4 
	(
	 	(0 1 9 8)
	)


//    wall bohn_shroud
//    (
//        (0 1 10 11)
//        (11 0 1 10)
//    )
//
//    wall bohn_hub 
//    (
//        (3 2 9 8)
//        (8 3 2 9)
//    )
//
//    wall bohn_dswall
//    (
//        (1 2 9 10)
//        (10 9 2 1)
//    )
//
//    wall bohn_uswall
//    (
//        (0 11 8 3)
//        (8 11 0 3)
//    )
    
);

mergePatchPairs
(
);






//
//
//
//convertToMeters 0.025;
//
//vertices
//(
//    (0.21 0.21 0)
//    (-0.21 0.21 0)
//    (-0.21 -0.21 0)
//    (0.21 -0.21 0)
//    (0.21 0.21 1.2)
//    (-0.21 0.21 1.2)
//    (-0.21 -0.21 1.2)
//    (0.21 -0.21 1.2)
//    (0.353553 0.353553 0)
//    (-0.353553 0.353553 0)
//    (-0.353553 -0.353553 0)
//    (0.353553 -0.353553 0)
//    (0.353553 0.353553 1.2)
//    (-0.353553 0.353553 1.2)
//    (-0.353553 -0.353553 1.2)
//    (0.353553 -0.353553 1.2)
//    (0.21 0.21 0.6)
//    (-0.21 0.21 0.6)
//    (-0.21 -0.21 0.6)
//    (0.21 -0.21 0.6)
//    (0.353553 0.353553 0.6)
//    (-0.353553 0.353553 0.6)
//    (-0.353553 -0.353553 0.6)
//    (0.353553 -0.353553 0.6)
//);
//
//blocks
//(
//    // center block 1
//    hex (2 3 0 1 18 19 16 17) (23 23 53) simpleGrading (1 1 2.5)
//    // right 1
//    hex (3 11 8 0 19 23 20 16) (17 23 53) simpleGrading (1 1 2.5)
//    // top 1
//    hex (1 0 8 9 17 16 20 21) (23 17 53) simpleGrading (1 1 2.5)
//    // left 1
//    hex (10 2 1 9 22 18 17 21) (17 23 53) simpleGrading (1 1 2.5)
//    // bottom 1
//    hex (10 11 3 2 22 23 19 18) (23 17 53) simpleGrading (1 1 2.5)
//
//    // center block 2
//    hex (18 19 16 17 6 7 4 5) (23 23 53) simpleGrading (1 1 0.4)
//    // right 2
//    hex (19 23 20 16 7 15 12 4) (17 23 53) simpleGrading (1 1 0.4)
//    // top 2
//    hex (17 16 20 21 5 4 12 13) (23 17 53) simpleGrading (1 1 0.4)
//    // left 2
//    hex (22 18 17 21 14 6 5 13) (17 23 53) simpleGrading (1 1 0.4)
//    // bottom 2
//    hex (22 23 19 18 14 15 7 6) (23 17 53) simpleGrading (1 1 0.4)
//);
//
//edges
//(
//    arc 11 8 (0.5 0 0)
//    arc 8 9 (0 0.5 0)
//    arc 9 10 (-0.5 0 0)
//    arc 10 11 (0 -0.5 0)
//    arc 15 12 (0.5 0 1.2)
//    arc 12 13 (0 0.5 1.2)
//    arc 13 14 (-0.5 0 1.2)
//    arc 14 15 (0 -0.5 1.2)
//    arc 23 20 (0.5 0 0.6)
//    arc 20 21 (0 0.5 0.6)
//    arc 21 22 (-0.5 0 0.6)
//    arc 22 23 (0 -0.5 0.6)
//);
//
//patches
//(
//    wall sideWalls
//    (
//        (11 23 20 8)
//        (23 15 12 20)
//        (8 20 21 9)
//        (20 12 13 21)
//        (9 10 22 21)
//        (21 22 14 13)
//        (10 11 23 22)
//        (22 23 15 14)
//    )
//
//    wall bottomWall
//    (
//        (2 3 0 1)
//        (3 11 8 0)
//        (0 8 9 1)
//        (2 1 9 10)
//        (2 10 11 3)
//    )
//
//    wall topWall
//    (
//        (6 7 4 5)
//        (7 15 12 4)
//        (4 12 13 5)
//        (6 5 13 14)
//        (6 14 15 7)
//    )
//
//);
//
//mergePatchPairs
//(
//);

//nCellz	1;
//
//Nx	$nCellx;
//Ny	$nCelly;
//Nz	$nCellz;
//
//bp   0.4;
//bn  -0.4;
//
//dp   4;
//dn  -4;
//dl  10;
//
//nb  15;
//nd  30;
//nl  20;
//
//gd   20;
//gl   1;
//
//geometry
//{
//    sphere
//    {
//        type searchableSphere;
//        centre (0 0 0);
//        radius 0.5;
//    }
//}
//
//###convertToMeters 0.001;
//
//vertices
//(
//
//    project ($bn $bn $bn) (sphere)
//    project ($bp $bn $bn) (sphere)
//    project ($bn $bp $bn) (sphere)
//    project ($bp $bp $bn) (sphere)
//
//    project ($bn $bn $bp) (sphere)
//    project ($bp $bn $bp) (sphere)
//    project ($bn $bp $bp) (sphere)
//    project ($bp $bp $bp) (sphere)
//
//    ($dn $dn $dn)
//    ($dp $dn $dn)
//    ($dn $dp $dn)
//    ($dp $dp $dn)
//
//    ($dn $dn $dp)
//    ($dp $dn $dp)
//    ($dn $dp $dp)
//    ($dp $dp $dp)
//
//    ($dl $dn $dn)
//    ($dl $dp $dn)
//    ($dl $dn $dp)
//    ($dl $dp $dp)
//);
//
//blocks
//(
//    hex (1 0 8 9 5 4 12 13) ($nb $nd $nb) simpleGrading (1 $gd 1)
//    hex (0 2 10 8 4 6 14 12) ($nb $nd $nb) simpleGrading (1 $gd 1)
//    hex (2 3 11 10 6 7 15 14) ($nb $nd $nb) simpleGrading (1 $gd 1)
//    hex (3 1 9 11 7 5 13 15) ($nb $nd $nb) simpleGrading (1 $gd 1)
//    hex (0 1 9 8 2 3 11 10) ($nb $nd $nb) simpleGrading (1 $gd 1)
//    hex (5 4 12 13 7 6 14 15) ($nb $nd $nb) simpleGrading (1 $gd 1)
//    hex (9 16 17 11 13 18 19 15) ($nl $nb $nb) simpleGrading (1 1 1)
//
//    // Solid region
//    hex (0 1 3 2 4 5 7 6) ($nb $nb $nb) simpleGrading (1 1 1)
//);
//
//edges
//(
//    project  0 2  (sphere)
//    project  2 3  (sphere)
//    project  3 1  (sphere)
//    project  1 0  (sphere)
//    project  4 6  (sphere)
//    project  6 7  (sphere)
//    project  7 5  (sphere)
//    project  5 4  (sphere)
//    project  0 4  (sphere)
//    project  2 6  (sphere)
//    project  3 7  (sphere)
//    project  1 5  (sphere)
//);
//
//faces
//(
//    project (0 2 6 4) sphere
//    project (2 3 7 6) sphere
//    project (3 1 5 7) sphere
//    project (1 0 4 5) sphere
//    project (0 1 3 2) sphere
//    project (4 5 7 6) sphere
//);
//
//boundary
//(
//    inlet
//    {
//        type patch;
//        faces
//        (
//            (8 10 14 12)
//        );
//    }
//
//    walls
//    {
//        type wall;
//        inGroups (externalWall);
//        faces
//        (
//            (8 9 11 10)
//            (12 13 15 14)
//            (10 11 15 14)
//            (11 17 19 15)
//            (9 16 17 11)
//            (13 18 19 15)
//            (8 9 13 12)
//            (9 16 18 13)
//        );
//    }
//
//    outlet
//    {
//        type patch;
//        faces
//        (
//            (16 17 19 18)
//        );
//    }
//);

// ************************************************************************* //
